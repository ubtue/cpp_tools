INC            = ../lib/include
LIB_SRCS       = ../lib/src
CCCFLAGS       = -g -Wall -Wextra -Werror -Wunused-parameter -Wshadow -march=native -O3 -ftrapv \
                 -Ilib/libstemmer/include -pedantic -I/opt/shibboleth/include -I/usr/include/libxml2 -I$(INC) \
                 -DETC_DIR='"/usr/local/var/lib/tuelib"'
ifeq ($(CCC),clang++)
  CCCFLAGS += -std=gnu++11 -Wno-vla-extension -Wno-c++1y-extensions
else
  CCCFLAGS += -std=gnu++14
endif
CCC            = clang++
OBJ            = .
MAKE_DEPS      = /usr/local/bin/iViaCore-mkdep
LIBS           = -L../lib -lubtue -L../lib/libstemmer -lstemmer -lxml2 -lpcre -lkyotocabinet -lmagic -lz \
                 -larchive -L/opt/shibboleth/lib64/ -lcurl -L/usr/lib64/mysql/ -lmysqlclient -lrt -lssl -lcrypto -lpthread -ldl \
                 -luuid -llept -ltesseract -lsqlite3
ifneq ("$(wildcard /usr/include/selinux)","")
  LIBS += -lselinux
endif
PROGS          = $(patsubst %.cc,%,$(wildcard *.cc))
CGI_PROGS      = full_text_lookup translate_chainer
INSTALL_PROGS  = $(filter-out %_test,$(PROGS)) *.sh

.PHONY: all amd64 install clean

all: .deps $(PROGS)

%.o: %.cc Makefile
	@echo "Compiling $<..."
	@$(CCC) $(CCCFLAGS) $< -c

$(PROGS): % : %.o ../lib/libubtue.a
	@echo "Linking $@..."
	@$(CCC) $< -o $@ $(LIBS)

-include .deps
.deps: *.cc $(INC)/*.h Makefile
	$(MAKE_DEPS) -I $(INC) *.cc

../lib/libubtue.a: $(wildcard ../lib/src/*.cc) $(wildcard ../lib/include/*.h)
	$(MAKE) -C ../lib

test: all
	@$(foreach prog,$(PROGS), echo "Running" $(prog) ; ./$(prog); echo "------------------"; )

clean:
	rm -f *.o *~ $(PROGS) .deps *.gcda *.gcno *.info
	rm -rf output

